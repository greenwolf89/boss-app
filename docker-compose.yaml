volumes:
  boss-app-data:
    external: true

services:
  backend:
    depends_on:
      - postgres
    image: backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    # restart: on-failure
    env_file: .env
    ports:
      - "8080:8000"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url":"jdbc:postgresql://localhost:5432/${POSTGRES_DB}",
        "spring.datasource.username":"${POSTGRES_USER}",
        "spring.datasource.password":"${POSTGRES_PASSWORD}",

        "spring.jpa.show-sql":"true",
        "spring.jpa.hibernate.ddl-auto":"update",
        "spring.jpa.properties.hibernate.dialect":"org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.properties.hibernate.format_sql":"true"
        }'
    # volumes:
    #   - ./backend:/app

  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile
    volumes:
      - boss-app-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - 15432:5432

  frontend:
    image: node:lts-bullseye
    command: bash -c "npm install && npm start"
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_BOSS_API_HOST: http://localhost:8000
